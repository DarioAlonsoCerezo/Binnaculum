---
name: Device Tests

on:
  # Run comprehensive tests on schedule (not on every PR)
  schedule:
    - cron: '0 6 * * 1,3,5'  # Mon, Wed, Fri at 6 AM UTC
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  # Core tests (lightweight, runs on all platforms)
  core-tests:
    name: Core Logic Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore src/Tests/Core.Tests/Core.Tests.fsproj

      - name: Build Core project
        run: dotnet build src/Core/Core.fsproj --configuration Release --no-restore

      - name: Build Core.Tests
        run: dotnet build src/Tests/Core.Tests/Core.Tests.fsproj --configuration Release --no-restore

      - name: Run Core Tests
        run: |
          # Run tests - expect 100% pass rate (MAUI tests moved to Core.Platform.Tests)
          dotnet test src/Tests/Core.Tests/Core.Tests.fsproj \
            --configuration Release --no-build --verbosity normal \
            --logger "trx;LogFileName=core-tests-results.trx"
          
          # Check results - expect all tests to pass
          TOTAL_TESTS=$(grep -o 'total="[0-9]*"' src/Tests/Core.Tests/TestResults/core-tests-results.trx | grep -o '[0-9]*' || echo "0")
          PASSED_TESTS=$(grep -o 'passed="[0-9]*"' src/Tests/Core.Tests/TestResults/core-tests-results.trx | grep -o '[0-9]*' || echo "0")
          
          echo "Total tests: $TOTAL_TESTS"
          echo "Passed tests: $PASSED_TESTS"
          
          # Expect 81/81 tests passing (100% success rate)
          if [[ "$TOTAL_TESTS" == "81" ]] && [[ "$PASSED_TESTS" == "81" ]]; then
            echo "✅ Core tests passed with clean results ($PASSED_TESTS/$TOTAL_TESTS)"
            exit 0
          else
            echo "❌ Unexpected test results: $PASSED_TESTS/$TOTAL_TESTS"
            echo "Expected 81/81 passing tests (100% success rate - MAUI tests moved to separate project)"
            exit 1
          fi

      - name: Publish Core Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Core Logic Tests Results
          path: '**/core-tests-results.trx'
          reporter: dotnet-trx
          fail-on-error: false

  # Build integration tests
  build-integration:
    name: Build Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install MAUI Android Workload
        run: dotnet workload install maui-android
        timeout-minutes: 5

      - name: Restore dependencies
        run: |
          dotnet restore src/Tests/Build.IntegrationTests/Build.IntegrationTests.csproj

      - name: Build Build.IntegrationTests
        run: |
          dotnet build src/Tests/Build.IntegrationTests/Build.IntegrationTests.csproj \
            --configuration Release --no-restore

      - name: Run Build Integration Tests
        run: |
          dotnet test src/Tests/Build.IntegrationTests/Build.IntegrationTests.csproj \
            --configuration Release --no-build --verbosity normal \
            --logger "trx;LogFileName=build-tests-results.trx"

      - name: Publish Build Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Build Integration Tests Results
          path: '**/build-tests-results.trx'
          reporter: dotnet-trx
          fail-on-error: false

  # Device tests matrix (platform-specific)
  device-tests:
    name: Device Tests (${{ matrix.platform }})
    needs: [core-tests]
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: android
            os: ubuntu-latest
            target: net9.0-android
          - platform: windows
            os: windows-latest
            target: net9.0-windows10.0.19041.0
          - platform: ios
            os: macos-latest
            target: net9.0-ios
          - platform: maccatalyst
            os: macos-latest
            target: net9.0-maccatalyst
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install MAUI workloads (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: dotnet workload install maui-android
        timeout-minutes: 5

      - name: Install MAUI workloads (macOS)
        if: matrix.os == 'macos-latest'
        run: dotnet workload install maui-android maui-ios maui-maccatalyst
        timeout-minutes: 10

      - name: Install MAUI workloads (Windows)
        if: matrix.os == 'windows-latest'
        run: dotnet workload install maui-android maui-windows
        timeout-minutes: 10

      - name: Restore Core dependencies
        run: dotnet restore src/Core/Core.fsproj

      - name: Build Core project
        run: dotnet build src/Core/Core.fsproj --configuration Release --no-restore

      - name: Restore Device Tests dependencies
        run: dotnet restore src/Tests/TestUtils/UI.DeviceTests/UI.DeviceTests.csproj

      - name: Build Device Tests (${{ matrix.target }})
        run: |
          dotnet build src/Tests/TestUtils/UI.DeviceTests/UI.DeviceTests.csproj \
            --framework ${{ matrix.target }} --configuration Release --no-restore

      - name: Build HeadlessRunner for CI
        run: |
          dotnet restore src/Tests/TestUtils/UI.DeviceTests.Runners/UI.DeviceTests.Runners.csproj
          dotnet build src/Tests/TestUtils/UI.DeviceTests.Runners/UI.DeviceTests.Runners.csproj \
            --framework ${{ matrix.target }} --configuration Release --no-restore

      - name: Run HeadlessRunner Device Tests (${{ matrix.platform }})
        run: |
          ./scripts/run-headless-tests.sh \
            --platform ${{ matrix.platform }} \
            --output-format xml \
            --output-path test-results-${{ matrix.platform }}.xml \
            --headless \
            --collect-artifacts \
            --artifact-path ./test-artifacts \
            --verbosity detailed \
            --timeout 600 \
            --target-framework ${{ matrix.target }}
        continue-on-error: true

      - name: Publish HeadlessRunner Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: HeadlessRunner Tests Results (${{ matrix.platform }})
          path: '**/test-results-${{ matrix.platform }}.xml'
          reporter: dotnet-trx
          fail-on-error: false

      - name: Upload HeadlessRunner artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: headless-runner-artifacts-${{ matrix.platform }}
          path: |
            test-artifacts/
            test-results-${{ matrix.platform }}.xml
          retention-days: 7

      - name: Upload build artifacts (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-${{ matrix.platform }}
          path: |
            src/Tests/TestUtils/UI.DeviceTests/bin/Release/${{ matrix.target }}/
            src/Tests/TestUtils/UI.DeviceTests.Runners/bin/Release/${{ matrix.target }}/
            **/*.binlog
          retention-days: 7

  # Test result aggregation
  device-tests-summary:
    name: Device Tests Summary
    needs: [core-tests, build-integration, device-tests]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Check test results
        run: |
          echo "Core Tests: ${{ needs.core-tests.result }}"
          echo "Build Integration: ${{ needs.build-integration.result }}"
          echo "Device Tests: ${{ needs.device-tests.result }}"

          if [[ "${{ needs.core-tests.result }}" == "failure" ]]; then
            echo "❌ Core tests failed - critical business logic issues"
            exit 1
          fi

          if [[ "${{ needs.build-integration.result }}" == "failure" ]]; then
            echo "⚠️  Build integration tests failed - CI/CD setup issues detected"
            # Don't fail the build, just warn
          fi

          if [[ "${{ needs.device-tests.result }}" == "failure" ]]; then
            echo "⚠️  Some device builds failed - check platform-specific issues"
            # Don't fail the build for device test build issues
          fi

          echo "✅ Device Tests workflow completed"