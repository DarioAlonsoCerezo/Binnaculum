---
name: PR Check

on:
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - '.github/workflows/pr-check.yml'
  push:
    branches: [main]
    paths:
      - 'src/**'
      - '.github/workflows/pr-check.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  # Essential validation - fast and focused
  essential-checks:
    name: Essential Validation
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: true
          cache-dependency-path: '**/Directory.Packages.props'

      - name: Restore Core dependencies
        run: dotnet restore src/Core/Core.fsproj

      - name: Build Core project
        run: dotnet build src/Core/Core.fsproj --configuration Release --no-restore

      - name: Restore Core.Tests dependencies  
        run: dotnet restore src/Tests/Core.Tests/Core.Tests.fsproj

      - name: Build Core.Tests
        run: dotnet build src/Tests/Core.Tests/Core.Tests.fsproj --configuration Release --no-restore

      - name: Run Core Tests
        run: |
          # Run Core tests - validates business logic correctness
          dotnet test src/Tests/Core.Tests/Core.Tests.fsproj \
            --configuration Release --no-build --verbosity normal \
            --logger "trx;LogFileName=core-tests-results.trx"
          
          # dotnet test returns 0 for success, non-zero for failures
          # This automatically validates that all tests pass without hardcoded expectations

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Core Tests Results
          path: '**/core-tests-results.trx'
          reporter: dotnet-trx
          fail-on-error: false

  # Android build validation (fast feedback on MAUI setup)
  android-build:
    name: Android Build Check
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [essential-checks]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: true
          cache-dependency-path: '**/Directory.Packages.props'

      - name: Cache MAUI Workloads
        uses: actions/cache@v4
        with:
          path: |
            ~/.dotnet/sdk-manifests
            ~/.dotnet/metadata
            ~/.dotnet/packs
            ~/.dotnet/workloadsets
          key: ${{ runner.os }}-maui-android-${{ hashFiles('Directory.Build.props') }}
          restore-keys: |
            ${{ runner.os }}-maui-android-

      - name: Install MAUI Android Workload
        run: dotnet workload install maui-android
        timeout-minutes: 5

      - name: Build Core project
        run: |
          dotnet restore src/Core/Core.fsproj
          dotnet build src/Core/Core.fsproj --configuration Release --no-restore

      - name: Build Android UI project (smoke test)
        run: |
          dotnet restore src/UI/Binnaculum.csproj
          dotnet build src/UI/Binnaculum.csproj \
            --framework net9.0-android --configuration Release --no-restore

      - name: Build success notification
        run: |
          echo "✅ Android build successful"
          echo "This confirms MAUI workload and basic Android UI compilation works"

  # Summary job
  pr-check-summary:
    name: PR Check Summary
    needs: [essential-checks, android-build]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check results
        run: |
          echo "## PR Check Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Essential Checks: ${{ needs.essential-checks.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Android Build: ${{ needs.android-build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.essential-checks.result }}" == "success" ]]; then
            echo "✅ **Core validation passed**" >> $GITHUB_STEP_SUMMARY
            echo "Business logic tests are working correctly"
            echo ""
          else
            echo "❌ **Core validation failed**" >> $GITHUB_STEP_SUMMARY
            echo "Critical business logic issues detected"
            exit 1
          fi
          
          if [[ "${{ needs.android-build.result }}" == "success" ]]; then
            echo "✅ **Android build check passed**" >> $GITHUB_STEP_SUMMARY
            echo "MAUI setup and compilation working"
          else
            echo "⚠️ **Android build check failed**" >> $GITHUB_STEP_SUMMARY
            echo "MAUI setup issues - check build logs"
            # Don't fail PR for build-only issues
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "- Core failures block merge" >> $GITHUB_STEP_SUMMARY
          echo "- Build failures are warnings only" >> $GITHUB_STEP_SUMMARY
          echo "- Comprehensive testing runs on scheduled workflows" >> $GITHUB_STEP_SUMMARY